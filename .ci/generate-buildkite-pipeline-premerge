#!/usr/bin/env bash
#===----------------------------------------------------------------------===##
#
# Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
#===----------------------------------------------------------------------===##

#
# This file generates a Buildkite pipeline that triggers the various CI jobs for
# the LLVM project during pre-commit CI (each time a Phabricator diff is uploaded).
#
# See https://buildkite.com/docs/agent/v3/cli-pipeline#pipeline-format.
#


set -eu
set -o pipefail

echo "steps:"

reviewID="$(git log --format=%B -n 1 | sed -nE 's/^Review-ID:[[:space:]]*(.+)$/\1/p')"
if [[ "${reviewID}" != "" ]]; then
  buildMessage="https://llvm.org/${reviewID}"
else
  buildMessage="Push to branch ${BUILDKITE_BRANCH}"
fi

# If libc++ or one of the runtimes directories changed
if git diff --name-only HEAD~1 | grep -q -E "^libcxx/|^libcxxabi/|^libunwind/|^runtimes/|^cmake/"; then
  cat <<EOF
  - trigger: "libcxx-ci"
    build:
      message: "${buildMessage}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
EOF
fi

# If clang changed
if git diff --name-only HEAD~1 | grep -q -E "^clang/"; then
  cat <<EOF
  - trigger: "clang-ci"
    build:
      message: "${buildMessage}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
EOF

INPUT_LLVM_ENABLE_PROJECTS="mlir;clang;llvm" \
  INPUT_BUILDKITE_QUEUE="linux-test" \
  .ci/generate-buildkite-pipeline-linux-step

INPUT_LLVM_ENABLE_PROJECTS="llvm" \
  INPUT_BUILDKITE_QUEUE="windows" \
  .ci/generate-buildkite-pipeline-windows-step

- continue_on_failure: true
  wait: '~'
- agents:
    queue: service
  artifact_paths:
  - artifacts/**/*
  commands:
  - export SRC=$${BUILDKITE_BUILD_PATH}/llvm-premerge-checks
  - rm -rf $${SRC}
  - git clone --depth 1 https://github.com/google/llvm-premerge-checks.git "$${SRC}"
  - cd $${SRC}
  - git fetch origin "main":x
  - git checkout x
  - echo "llvm-premerge-checks commit"
  - git rev-parse HEAD
  - pip install -q -r $${SRC}/scripts/requirements.txt
  - cd "$$BUILDKITE_BUILD_CHECKOUT_PATH"
  - $${SRC}/scripts/summary.py
  label: ':phabricator: update build status on Phabricator'
  timeout_in_minutes: 10


fi
